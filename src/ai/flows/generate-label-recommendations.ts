// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating label design recommendations based on keywords or a brief description.
 *
 * - generateLabelRecommendations - A function that takes keywords and returns label design recommendations.
 * - GenerateLabelRecommendationsInput - The input type for the generateLabelRecommendations function.
 * - GenerateLabelRecommendationsOutput - The return type for the generateLabelRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateLabelRecommendationsInputSchema = z.object({
  keywords: z
    .string()
    .describe(
      'Keywords or a brief description of the desired label design.'
    ),
});
export type GenerateLabelRecommendationsInput = z.infer<
  typeof GenerateLabelRecommendationsInputSchema
>;

const GenerateLabelRecommendationsOutputSchema = z.object({
  recommendations: z
    .string()
    .describe(
      'A list of design elements and layout recommendations for the label.'
    ),
});
export type GenerateLabelRecommendationsOutput = z.infer<
  typeof GenerateLabelRecommendationsOutputSchema
>;

export async function generateLabelRecommendations(
  input: GenerateLabelRecommendationsInput
): Promise<GenerateLabelRecommendationsOutput> {
  return generateLabelRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateLabelRecommendationsPrompt',
  input: {schema: GenerateLabelRecommendationsInputSchema},
  output: {schema: GenerateLabelRecommendationsOutputSchema},
  prompt: `You are an AI assistant specializing in label design.

  Based on the provided keywords or description, recommend design elements and layouts for the label.

  Keywords/Description: {{{keywords}}}

  Recommendations:`,
});

const generateLabelRecommendationsFlow = ai.defineFlow(
  {
    name: 'generateLabelRecommendationsFlow',
    inputSchema: GenerateLabelRecommendationsInputSchema,
    outputSchema: GenerateLabelRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
